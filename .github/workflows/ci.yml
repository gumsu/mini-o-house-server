name: deploy to project

on:
  pull_request:
    branches:
      [ "master" ]

env:
  S3_BUCKET_NAME: miniohouse-deploy
  PROJECT_NAME: mini-o-house-server
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          
      - name: Make application.yml
        run: |
          cd ./src/main/resources
          touch ./application.yml
          echo "${{ secrets.APPLICATION }}" > ./application.yml
        shell: bash
        
      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: 'miniohouse'
          mysql user: 'admin'
          mysql password: '${{ secrets.MYSQL_PASSWORD }}'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build With Gradle
        run: ./gradlew build --stacktrace --info

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }}
        with:
          files: build/test-results/**/*.xml

      - name: Make zip file
        run: zip -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
        
      - name: Code Deploy
        run: aws deploy create-deployment --application-name mini-o-house-deploy
          --deployment-config-name CodeDeployDefault.AllAtOnce 
          --deployment-group-name develop 
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Add coverage to PR
          id: jacoco
          uses: madrapps/jacoco-report@v1.3
          with:
            title: üìù ÌÖåÏä§Ìä∏ Ïª§Î≤ÑÎ¶¨ÏßÄ Î¶¨Ìè¨Ìä∏
            paths: ${{ github.workspace }}/build/jacoco/index.xml
            token: ${{ secrets.GITHUB_TOKEN }}
            min-coverage-overall: 40
            min-coverage-changed-files: 60
